# import requests

# year = input("Enter the year: ")
# n=int(input("Enter number of Enties per page: "))

# url = f"https://services.nvd.nist.gov/rest/json/cves/2.0/?pubStartDate={year}-01-01T00:00:00.000-05:00&pubEndDate={year}-01-14T23:59:59.999-05:00"

# try:
#     response = requests.get(url)
#     if response.status_code == 200:
#         data = response.json()
#         if "vulnerabilities" in data and len(data["vulnerabilities"]) > 0:
#             for i in range(n):
#                 vuln = data["vulnerabilities"][i]['cve']
#                 print("\nCVE Details:")
#                 for key, value in vuln.items():
#                     print(f"{key}: {value}")
#     else:
#         print(f"Failed to fetch data. HTTP Status Code: {response.status_code}")
# except requests.exceptions.RequestException as e:
#     print(f"An error occurred: {e}")



import requests

year = input("Enter the year: ")
n=int(input("Enter number of Enties per page: "))

url = f"https://services.nvd.nist.gov/rest/json/cves/2.0/?pubStartDate={year}-01-01T00:00:00.000-05:00&pubEndDate={year}-01-14T23:59:59.999-05:00"

try:
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        
        if "vulnerabilities" in data and len(data["vulnerabilities"]) > 0:
            for i in range(n):
                vuln = data["vulnerabilities"][i]['cve']
                
                attributes = {
                    "ID": vuln.get("id"),
                    "Published Date": vuln.get("published"),
                    "Last Modified Date": vuln.get("lastModified"),
                    "Source Identifier":vuln.get("sourceIdentifier"),
                    "Status":vuln.get("vulnStatus")
                }
                print("\nCVE Details:")
                for key, value in attributes.items():
                    print(f"{key}: {value}")
    else:
        print(f"failed to fetch data. http status sode: {response.status_code}")
except requests.exceptions.RequestException as e:
    print(f"An error occurred: {e}")



